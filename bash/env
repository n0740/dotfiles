export TERM="xterm-256color"

# Initial PATH on OS X: /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
[ -d "$HOME/local/bin" ] && export PATH="$HOME/local/bin:$PATH"
[ -d "/usr/local/opt/go/libexec/bin" ] && export PATH="$PATH:/usr/local/opt/go/libexec/bin"

[ -d "$HOME/go" ] && export GOPATH="$HOME/go"
[ -d "$GOPATH/bin" ] && export PATH="$GOPATH/bin:$PATH"

__source_if_exists "$HOME/.asdf/asdf.sh"
__source_if_exists "$HOME/.asdf/completions/asdf.bash"
__source_if_exists "$HOME/.cargo/env"

# Locale
export LANG="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# Python pip
# export PIP_VIRTUALENV_BASE=$WORKON_HOME
# export PIP_RESPECT_VIRTUALENV=true

# Python virtualenvwrapper
# export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
# export WORKON_HOME="$HOME/.virtualenvs"
# export PROJECT_HOME="$HOME/code"
# if which virtualenvwrapper.sh > /dev/null 2>&1; then
#     source $(which virtualenvwrapper.sh)
# fi

export VENV_HOME="$HOME/.venvs"
[[ -d $VENV_HOME ]] || mkdir $VENV_HOME

lsvenv() {
    ls -1 $VENV_HOME
}

activateenv() {
    if [ $# -eq 0 ]; then
        lsvenv
    else
        source "$VENV_HOME/$1/bin/activate"
        if [[ $SHELL =~ "zsh" ]]; then
            rehash
        fi
        # fi
    fi
}

mkvenv() {
    if [ $# -eq 0 ]; then
        echo "Please provide venv name"
    else
        python -m venv $VENV_HOME/$1
    fi
}

rmvenv() {
    if [ $# -eq 0 ]; then
        lsvenv
    else
        [[ -d "$VENV_HOME/$1" ]] && rm -r "$VENV_HOME/$1"
    fi
}

cdsitepackages() {
    if [ -z "$VIRTUAL_ENV" ]; then
        echo "venv is not activated"
    else
        cd $(find $VIRTUAL_ENV -name site-packages -d)
    fi
}


lssitepackages() {
    if [ -z "$VIRTUAL_ENV" ]; then
        echo "venv is not activated"
    else
        ls -lh $(find $VIRTUAL_ENV -name site-packages -d)
    fi
}

cdsitepackages() {
    if [ -z "$VIRTUAL_ENV" ]; then
        echo "venv is not activated"
    else
        cd $(find $VIRTUAL_ENV -name site-packages -d)
    fi
}


compctl -W $VENV_HOME/ -/ venv
compctl -W $VENV_HOME/ -/ activateenv
compctl -W $VENV_HOME/ -/ rmvenv
compctl -W $VENV_HOME/ -/ mkvenv


if [[ -S "$SSH_AUTH_SOCK" && ! -h "$SSH_AUTH_SOCK" ]]; then
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock;
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock;

export PAGER=less


# No ._ files in archives
if ( __is_osx ); then
   export COPYFILE_DISABLE=true
fi

# LSCOLORS The value of this variable describes what color to use
# for which attribute when colors are enabled with
# CLICOLOR. This string is a concatenation of pairs of the
# format fb, where f is the foreground color and b is the
# background color.
#
# The color designators are as follows:
#
# a black
# b red
# c green
# d brown
# e blue
# f magenta
# g cyan
# h light grey
# A bold black, usually shows up as dark grey
# B bold red
# C bold green
# D bold brown, usually shows up as yellow
# E bold blue
# F bold magenta
# G bold cyan
# H bold light grey; looks like bright white
# x default foreground or background
#
# Note that the above are standard ANSI colors. The actual
# display may differ depending on the color capabilities of
# the terminal in use.
#
# The order of the attributes are as follows:
#
# 1. directory
# 2. symbolic link
# 3. socket
# 4. pipe
# 5. executable
# 6. block special
# 7. character special
# 8. executable with setuid bit set
# 9. executable with setgid bit set
# 10. directory writable to others, with sticky bit
# 11. directory writable to others, without sticky bit
#
# The default is "exfxcxdxbxegedabagacad", i.e. blue fore-
# ground and default background for regular directories,
# black foreground and red background for setuid executa-
# bles, etc.
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

