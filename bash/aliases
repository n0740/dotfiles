alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# Detect which "ls" flavor is in use
if ls --color > /dev/null 2>&1; then # GNU "ls"
    colorflag="--color"
else # OS X "ls"
    colorflag="-G"
fi
alias ls="command ls ${colorflag}"
alias sl='ls'
if ls -T > /dev/null 2>&1; then
    alias l='ls -lhT'
else
    alias l='ls -lh'
fi
alias ll='ls -lhA'

alias grep='grep -a --color=auto'
alias egrep='egrep -a --color=auto'
if ( __is_osx ); then
    alias G='ggrep -Pa --color=auto'
else
    alias G='grep -Pa --color=auto'
fi

alias L='less -r'
alias zl='zless'
alias zc='zcat'

alias tree='tree -a -I ".git|.svn|CVS|.DS_Store|*.pyc"'
alias h='head'
alias hh='head -n 1'
alias t='tail'
alias tt='tail -n 1'
alias j='jobs'
alias jj='jobs'

alias cal='gcal --starting-day=1'

lt() {
    if [ -n "$1" ]; then
        l -t "$1" | head
    else
        l -t | head
    fi
}

# Find file by template
ff() {
    find . -type f -iname '*'"$*"'*' -ls ;
}

 # Find file by template and execute command
fe() {
    find . -type f -iname '*'"$1"'*' -exec "${2:-file}" {} \; ;
}

# Text editors
if ( __is_osx ); then
    alias m='subl'
    alias v='"/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code"'
    alias vv='v .'
else
    alias m='vim'
fi
alias e='vim'
alias ee='e .'
alias vd='vimdiff'
alias mm='m .'
alias n='nvim'
alias nn='nvim .'

# Git
# Check "gitconfig" file for full aliases
alias g='git'
alias ga='git a'
alias gap='git ap'
alias gb='git b'
alias gba='git ba'
alias gbm='git bm'
alias gc='git c'
alias gca='git ca'
alias gci='git ci'
alias gco='git co'
alias gd='git d'
alias gdc='git dc'
alias gg='git status -sb'
alias gl='git lg -30'
alias gll='git lg'
alias glp='git lp'
alias gm='git m'
alias gmm='git mm'
alias gpl='git pl && git remote prune origin'
alias gps='git push'
alias gr='git r'
alias gra='git ra'
alias grc='git rc'

alias git-new-workdir='/usr/local/share/git-core/contrib/workdir/git-new-workdir'
alias ungit='find . -name '.git' -exec rm -rf {} \;'

# stree='/Applications/Sourcetree.app/Contents/Resources/stree'
# if which stree > /dev/null 2>&1; then
#   alias gx='stree $(git rev-parse --show-toplevel)'
# fi
if ( __is_osx ); then
    alias gx='/Applications/Sourcetree.app/Contents/Resources/stree $(git rev-parse --show-toplevel)'
fi

if which tig > /dev/null 2>&1; then
  alias gt='tig .'
fi

if which rg > /dev/null 2>&1; then
  alias rb=rg
fi

if which lazygit > /dev/null 2>&1; then
  alias lg=lazygit
fi

# Python
alias p='python3'
alias pp='ipython'
alias lssitepackages="lssitepackages -lh ${colorflag}"

alias rmpyc='find . -type f -iname "*.pyc" -delete'

alias d='docker'
alias co='docker-compose'

alias M='make'

function take() {
    mkdir -p "$1"
    cd "$1"
}

function wo() {
    cd ~/work/$1;
}


# Start ssh-agent and load key(s).
# May be useful when our key uses passphrase.
function ssh-agent-start() {
    # Start ssh-agent with bash shell
    eval $(ssh-agent -s)

    # Add key(s). Will ask for passphrase if needed
    for f in $(ls ~/.ssh | grep -e "^id_[r|d]sa[^.]*$")
    do
        ssh-add -k "~/.ssh/$f"
    done

    # Listing keys currently represented by the agent
    ssh-add -l
}


# Kill the current ssh-agent
function ssh-agent-stop() {
    ssh-agent -k
}

function c() {
    cd ~/code/$1;
}

function ce() {
    cd ~/code_ext/$1;
}

function dl() {
    cd ~/Downloads/$1;
}

function db() {
    cd ~/Dropbox/$1;
}

# Set the terminal's title
function title() {
    if [[ -n "${TMUX+set}" ]]; then
        tmux rename-window -- "$*"
    else
        case $TERM in
            *xterm*|ansi)
                echo -ne '\033]0;'"$*"'\a'
                ;;
        esac
    fi
}

# Set terminal's title to current dir name
function dtitle() {
    title $(basename $PWD | sed 's/[_ ]/-/g')
}


# Set terminal's title to current virtualenv name
function vtitle() {
    if [ -n "$VIRTUAL_ENV" ]; then
        title $(basename $VIRTUAL_ENV)
    fi
}


# Set terminal's title to current git branch
function btitle() {
    local branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    if [ -n "$branch" ]; then
        title "$branch"
    fi
}


function pip-upgrade-outdated() {
    pip list --outdated | cut -d' ' -f1 | xargs -n1 pip install --upgrade
}


if which rpm2cpio > /dev/null 2>&1; then
    function rpmunpack() {
        rpm2cpio $1 | cpio -ivd
    }
fi


if which aws > /dev/null 2>&1; then
    alias a='aws'
fi

if which saws > /dev/null 2>&1; then
    alias aa='saws'
fi


function ctags-site-packages() {
    if [[ -d $VIRTUAL_ENV ]]; then
        ctags -R -f $VIRTUAL_ENV/tags $VIRTUAL_ENV/lib/python*/site-packages
    else
        echo "VIRTUAL_ENV not set"
    fi
}


function s3zcat() {
    aws s3 cp "$@" - | gzip -d - | cat
}


function s3zless() {
    aws s3 cp "$@" - | gzip -d - | less
}


function s3less() {
    aws s3 cp "$@" - | less
}


function s3cat() {
    aws s3 cp "$@" - | cat
}


function s3ls() {
    path=$(echo "$1" | sed -e s'#^s3://##')
    aws s3 ls --human-readable --summarize "s3://$path"
}

alias als=s3ls


function holidays_ru() {
    gcal --holiday-list --cc-holidays=RU
}

function holidays_de() {
    gcal --holiday-list --cc-holidays=DE_BY
}


function weather() {
    curl 'http://wttr.in/Munich?lang=en'
}
alias wt=weather


function battery() {
    pmset -g batt | grep -Eao '\d+%'
}

function fix-esc-key() {
    sudo pkill TouchBarServer
}

function flush-dns() {
    sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder
}
